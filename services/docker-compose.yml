version: "3.8"
services:
  postgres:
    image: postgres:10.5
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    logging:
      driver: none
    ports:
      - 5438:5432
    networks:
      - dev
    volumes:
      - judie-postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    command: redis-server
    volumes:
      - judie-redis-data:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
    ports:
      - 6379:6379
    networks:
      - dev
  app-service:
    networks:
      - dev
    privileged: true
    volumes:
      - ./app-service:/app
    working_dir: /app
    build:
      context: ./app-service
      dockerfile: ./Dockerfile.local
    ports:
      - 8080:8080
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      REDIS_HOST: redis
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
  web:
    networks:
      - dev
    privileged: true
    depends_on:
      - app-service
    volumes:
      - ./web:/app
      - /app/web/node_modules
    working_dir: /app
    build:
      context: ./web
      dockerfile: ./Dockerfile.local
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URI: http://app-service:8080

  # inference-service:
  #   networks:
  #     - dev
  #   privileged: true
  #   volumes:
  #     - ./inference-service:/app
  #   working_dir: /app
  #   build:
  #     context: ./inference-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8081:8080
  #   environment:
  #     ENV: development
  #     SERVER_PORT: 8080
  #     PG_USER: postgres
  #     PG_PASSWORD: postgres
  #     PG_HOST: postgres
  #     PG_PORT: 5432
  #     PG_DB_NAME: postgres
networks:
  dev:
    driver: bridge
volumes:
  judie-postgres-data: {}
  judie-redis-data: {}
