version: "3.8"
services:
  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    logging:
      driver: none
    ports:
      - 5438:5432
    networks:
      - dev
    volumes:
      - judie-postgres-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    command: redis-server
    volumes:
      - judie-redis-data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    ports:
      - 6379:6379
    networks:
      - dev
  app-service:
    networks:
      - dev
    privileged: true
    volumes:
      - ./app-service:/app
      - ./protos:/app/protos # Copies protos into the container at dir /app/protos
    working_dir: /app
    build:
      context: .
      dockerfile: ./app-service/Dockerfile.local
    ports:
      - 8080:8080
    restart: on-failure
    environment:
      NODE_ENV: local
      PORT: 8080
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/postgres}
      REDIS_HOST: redis
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      STRIPE_SK: ${STRIPE_SK}
      STRIPE_MONTHLY_PRICE_ID: ${STRIPE_MONTHLY_PRICE_ID}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      SEGMENT_WRITE_KEY: ${SEGMENT_WRITE_KEY}
      CUSTOMERIO_SITE_ID: ${CUSTOMERIO_SITE_ID}
      CUSTOMERIO_API_KEY: ${CUSTOMERIO_API_KEY}
      CUSTOMERIO_APP_API_KEY: ${CUSTOMERIO_APP_API_KEY}
  web:
    networks:
      - dev
    privileged: true
    depends_on:
      - app-service
    volumes:
      - ./web:/app
      - /app/web/node_modules
    working_dir: /app
    build:
      context: ./web
      dockerfile: ./Dockerfile.local
    ports:
      - 3000:3000
    environment:
      NEXT_PUBLIC_NODE_ENV: local
      NEXT_PUBLIC_API_URI: http://app-service:8080
      NEXT_PUBLIC_SEGMENT_WRITE_KEY: ${NEXT_PUBLIC_SEGMENT_WRITE_KEY}
  inference-service:
    networks:
      - dev
    privileged: true
    depends_on:
      - postgres
    working_dir: /app
    build:
      context: .
      dockerfile: ./inference_service/Dockerfile
    ports:
      - 8081:8080
    environment:
      LOGGING_LEVEL: info
      GRPC_PORT: 443
      GRPC_HEALTH_PORT: 8080
      WOLFRAM_APP_ID: ${WOLFRAM_APP_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
      STRIPE_SK: ${STRIPE_SK}
      STRIPE_MONTHLY_PRICE_ID: ${STRIPE_MONTHLY_PRICE_ID}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      SEGMENT_WRITE_KEY: ${SEGMENT_WRITE_KEY}
      CUSTOMERIO_SITE_ID: ${CUSTOMERIO_SITE_ID}
      CUSTOMERIO_API_KEY: ${CUSTOMERIO_API_KEY}
      CUSTOMERIO_APP_API_KEY: ${CUSTOMERIO_APP_API_KEY}
networks:
  dev:
    driver: bridge
volumes:
  judie-postgres-data: {}
  judie-redis-data: {}
